name: SonarQube analysis

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  
permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
    #   - name: Install dependencies and run tests
    #     run: |
    #       mvn clean install

      - name: Analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          # Additional arguments for the sonarcloud scanner
          args: |
            -Dsonar.projectKey=cap-java-sdm
            -Dsonar.sources=sdm/src/main/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.junit.reportPaths=target/surefire-reports
            -Dsonar.jacoco.reportPaths=target/jacoco.exec
            -Dsonar.inclusions=**/*.java
            -Dsonar.exclusions=**/target/**,**/node_modules/**,sdm/src/main/test/**,cap-notebook/*.capnb
            -Dsonar.java.file.suffixes=.java

      - name: Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}